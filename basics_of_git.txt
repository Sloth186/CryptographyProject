Two ways to do git stuff: in the terminal, and with the Git user interface.
I prefer the terminal but you may find the Git GUI to be more intuitive.

Terminal
1. Use the Windows Explorer to navigate to the folder where you are storing the project files.
2. Right-click anywhere within the folder (not on a file) and choose "Open in Terminal".

Essential commands to know (all should have "git" preceding it):
- "status" tells you the current status of your files compared to files in the git repo. It will tell you if you have added, deleted, or modified any files since the last time you synced your local repo with the git repo.
- "fetch" will check if the git repo has changed since your last sync, but does NOT sync your repo
- "pull" will apply any changes made to the git repo to your repo (NOT the other way around)
- "branch" will list your currently active branches
	- I won't bore you with the details about branches, but it is good practice when working with multiple people to create your own branch before making changes to your repo
	- "branch [name]" will create a new branch with the name that you give it
	- "checkout [name]" will switch you to the branch of your choosing (assuming it exists)
	- "branch -d [name]" will delete the chosen branch, I don't think you'll really ever have to do this though
- "add [files]" will stage files that you have added, deleted, or modified - this means to prepare the files for uploading to the git repo
- "commit -m [message]" will take prepared files from the previous command and actually get ready to upload them (not sure why there are two steps here), and associates a message with the commit, which should describe what you did (the message should be within quotation marks)
- "push"